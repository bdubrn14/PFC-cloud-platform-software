Help on module google.cloud.pubsub in google.cloud:

NAME
    google.cloud.pubsub

DESCRIPTION
    # Copyright 2017, Google LLC All rights reserved.
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.

CLASSES
    google.cloud.pubsub_v1.publisher.client.Client(builtins.object)
        google.cloud.pubsub_v1.PublisherClient
    google.cloud.pubsub_v1.subscriber.client.Client(builtins.object)
        google.cloud.pubsub_v1.SubscriberClient
    
    class PublisherClient(google.cloud.pubsub_v1.publisher.client.Client)
     |  A publisher client for Google Cloud Pub/Sub.
     |  
     |  This creates an object that is capable of publishing messages.
     |  Generally, you can instantiate this client with no arguments, and you
     |  get sensible defaults.
     |  
     |  Args:
     |      batch_settings (~google.cloud.pubsub_v1.types.BatchSettings): The
     |          settings for batch publishing.
     |      batch_class (class): A class that describes how to handle
     |          batches. You may subclass the
     |          :class:`.pubsub_v1.publisher.batch.base.BaseBatch` class in
     |          order to define your own batcher. This is primarily provided to
     |          allow use of different concurrency models; the default
     |          is based on :class:`threading.Thread`.
     |      kwargs (dict): Any additional arguments provided are sent as keyword
     |          arguments to the underlying
     |          :class:`~.gapic.pubsub.v1.publisher_client.PublisherClient`.
     |          Generally, you should not need to set additional keyword arguments.
     |  
     |  Method resolution order:
     |      PublisherClient
     |      google.cloud.pubsub_v1.publisher.client.Client
     |      builtins.object
     |  
     |  Methods inherited from google.cloud.pubsub_v1.publisher.client.Client:
     |  
     |  __init__(self, batch_settings=(), batch_class=<class 'google.cloud.pubsub_v1.publisher.batch.thread.Batch'>, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  batch(self, topic, message, create=True, autocommit=True)
     |      Return the current batch for the provided topic.
     |      
     |      This will create a new batch only if no batch currently exists.
     |      
     |      Args:
     |          topic (str): A string representing the topic.
     |          message (~google.cloud.pubsub_v1.types.PubsubMessage): The message
     |              that will be committed.
     |          create (bool): Whether to create a new batch if no batch is
     |              found. Defaults to True.
     |          autocommit (bool): Whether to autocommit this batch.
     |              This is primarily useful for debugging.
     |      
     |      Returns:
     |          ~.pubsub_v1.batch.Batch: The batch object.
     |  
     |  create_topic(self, name, labels=None, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Creates the given topic with the given name.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.PublisherClient()
     |          >>>
     |          >>> name = client.topic_path('[PROJECT]', '[TOPIC]')
     |          >>>
     |          >>> response = client.create_topic(name)
     |      
     |      Args:
     |          name (str): The name of the topic. It must have the format
     |              ``"projects/{project}/topics/{topic}"``. ``{topic}`` must start with a letter,
     |              and contain only letters (``[A-Za-z]``), numbers (``[0-9]``), dashes (``-``),
     |              underscores (``_``), periods (``.``), tildes (``~``), plus (``+``) or percent
     |              signs (``%``). It must be between 3 and 255 characters in length, and it
     |              must not start with ``"goog"``.
     |          labels (dict[str -> str]): User labels.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.cloud.pubsub_v1.types.Topic` instance.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  delete_topic(self, topic, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Deletes the topic with the given name. Returns ``NOT_FOUND`` if the topic
     |      does not exist. After a topic is deleted, a new topic may be created with
     |      the same name; this is an entirely new topic with none of the old
     |      configuration or subscriptions. Existing subscriptions to this topic are
     |      not deleted, but their ``topic`` field is set to ``_deleted-topic_``.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.PublisherClient()
     |          >>>
     |          >>> topic = client.topic_path('[PROJECT]', '[TOPIC]')
     |          >>>
     |          >>> client.delete_topic(topic)
     |      
     |      Args:
     |          topic (str): Name of the topic to delete.
     |              Format is ``projects/{project}/topics/{topic}``.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  get_iam_policy(self, resource, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Gets the access control policy for a resource.
     |      Returns an empty policy if the resource exists and does not have a policy
     |      set.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.PublisherClient()
     |          >>>
     |          >>> resource = client.topic_path('[PROJECT]', '[TOPIC]')
     |          >>>
     |          >>> response = client.get_iam_policy(resource)
     |      
     |      Args:
     |          resource (str): REQUIRED: The resource for which the policy is being requested.
     |              ``resource`` is usually specified as a path. For example, a Project
     |              resource is specified as ``projects/{project}``.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.cloud.pubsub_v1.types.Policy` instance.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  get_topic(self, topic, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Gets the configuration of a topic.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.PublisherClient()
     |          >>>
     |          >>> topic = client.topic_path('[PROJECT]', '[TOPIC]')
     |          >>>
     |          >>> response = client.get_topic(topic)
     |      
     |      Args:
     |          topic (str): The name of the topic to get.
     |              Format is ``projects/{project}/topics/{topic}``.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.cloud.pubsub_v1.types.Topic` instance.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  list_topic_subscriptions(self, topic, page_size=None, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Lists the name of the subscriptions for this topic.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.PublisherClient()
     |          >>>
     |          >>> topic = client.topic_path('[PROJECT]', '[TOPIC]')
     |          >>>
     |          >>>
     |          >>> # Iterate over all results
     |          >>> for element in client.list_topic_subscriptions(topic):
     |          ...     # process element
     |          ...     pass
     |          >>>
     |          >>> # Or iterate over results one page at a time
     |          >>> for page in client.list_topic_subscriptions(topic, options=CallOptions(page_token=INITIAL_PAGE)):
     |          ...     for element in page:
     |          ...         # process element
     |          ...         pass
     |      
     |      Args:
     |          topic (str): The name of the topic that subscriptions are attached to.
     |              Format is ``projects/{project}/topics/{topic}``.
     |          page_size (int): The maximum number of resources contained in the
     |              underlying API response. If page streaming is performed per-
     |              resource, this parameter does not affect the return value. If page
     |              streaming is performed per-page, this determines the maximum number
     |              of resources in a page.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.gax.PageIterator` instance. By default, this
     |          is an iterable of :class:`str` instances.
     |          This object can also be configured to iterate over the pages
     |          of the response through the `options` parameter.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  list_topics(self, project, page_size=None, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Lists matching topics.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.PublisherClient()
     |          >>>
     |          >>> project = client.project_path('[PROJECT]')
     |          >>>
     |          >>>
     |          >>> # Iterate over all results
     |          >>> for element in client.list_topics(project):
     |          ...     # process element
     |          ...     pass
     |          >>>
     |          >>> # Or iterate over results one page at a time
     |          >>> for page in client.list_topics(project, options=CallOptions(page_token=INITIAL_PAGE)):
     |          ...     for element in page:
     |          ...         # process element
     |          ...         pass
     |      
     |      Args:
     |          project (str): The name of the cloud project that topics belong to.
     |              Format is ``projects/{project}``.
     |          page_size (int): The maximum number of resources contained in the
     |              underlying API response. If page streaming is performed per-
     |              resource, this parameter does not affect the return value. If page
     |              streaming is performed per-page, this determines the maximum number
     |              of resources in a page.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.gax.PageIterator` instance. By default, this
     |          is an iterable of :class:`~google.cloud.pubsub_v1.types.Topic` instances.
     |          This object can also be configured to iterate over the pages
     |          of the response through the `options` parameter.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  project_path(project)
     |      Returns a fully-qualified project resource name string.
     |  
     |  publish(self, topic, data, **attrs)
     |      Publish a single message.
     |      
     |      .. note::
     |          Messages in Pub/Sub are blobs of bytes. They are *binary* data,
     |          not text. You must send data as a bytestring
     |          (``bytes`` in Python 3; ``str`` in Python 2), and this library
     |          will raise an exception if you send a text string.
     |      
     |          The reason that this is so important (and why we do not try to
     |          coerce for you) is because Pub/Sub is also platform independent
     |          and there is no way to know how to decode messages properly on
     |          the other side; therefore, encoding and decoding is a required
     |          exercise for the developer.
     |      
     |      Add the given message to this object; this will cause it to be
     |      published once the batch either has enough messages or a sufficient
     |      period of time has elapsed.
     |      
     |      Example:
     |          >>> from google.cloud.pubsub_v1 import publisher_client
     |          >>> client = publisher_client.PublisherClient()
     |          >>> topic = client.topic_path('[PROJECT]', '[TOPIC]')
     |          >>> data = b'The rain in Wales falls mainly on the snails.'
     |          >>> response = client.publish(topic, data, username='guido')
     |      
     |      Args:
     |          topic (str): The topic to publish messages to.
     |          data (bytes): A bytestring representing the message body. This
     |              must be a bytestring.
     |          attrs (Mapping[str, str]): A dictionary of attributes to be
     |              sent as metadata. (These may be text strings or byte strings.)
     |      
     |      Returns:
     |          ~concurrent.futures.Future: An object conforming to the
     |          ``concurrent.futures.Future`` interface.
     |  
     |  set_iam_policy(self, resource, policy, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Sets the access control policy on the specified resource. Replaces any
     |      existing policy.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.PublisherClient()
     |          >>>
     |          >>> resource = client.topic_path('[PROJECT]', '[TOPIC]')
     |          >>> policy = {}
     |          >>>
     |          >>> response = client.set_iam_policy(resource, policy)
     |      
     |      Args:
     |          resource (str): REQUIRED: The resource for which the policy is being specified.
     |              ``resource`` is usually specified as a path. For example, a Project
     |              resource is specified as ``projects/{project}``.
     |          policy (Union[dict, ~google.cloud.pubsub_v1.types.Policy]): REQUIRED: The complete policy to be applied to the ``resource``. The size of
     |              the policy is limited to a few 10s of KB. An empty policy is a
     |              valid policy but certain Cloud Platform services (such as Projects)
     |              might reject them.
     |              If a dict is provided, it must be of the same form as the protobuf
     |              message :class:`~google.cloud.pubsub_v1.types.Policy`
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.cloud.pubsub_v1.types.Policy` instance.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  test_iam_permissions(self, resource, permissions, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Returns permissions that a caller has on the specified resource.
     |      If the resource does not exist, this will return an empty set of
     |      permissions, not a NOT_FOUND error.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.PublisherClient()
     |          >>>
     |          >>> resource = client.topic_path('[PROJECT]', '[TOPIC]')
     |          >>> permissions = []
     |          >>>
     |          >>> response = client.test_iam_permissions(resource, permissions)
     |      
     |      Args:
     |          resource (str): REQUIRED: The resource for which the policy detail is being requested.
     |              ``resource`` is usually specified as a path. For example, a Project
     |              resource is specified as ``projects/{project}``.
     |          permissions (list[str]): The set of permissions to check for the ``resource``. Permissions with
     |              wildcards (such as '*' or 'storage.*') are not allowed. For more
     |              information see
     |              `IAM Overview <https://cloud.google.com/iam/docs/overview#permissions>`_.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.cloud.pubsub_v1.types.TestIamPermissionsResponse` instance.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  topic_path(project, topic)
     |      Returns a fully-qualified topic resource name string.
     |  
     |  update_topic(self, topic, update_mask, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Updates an existing topic. Note that certain properties of a topic are not
     |      modifiable.  Options settings follow the style guide:
     |      NOTE:  The style guide requires body: "topic" instead of body: "*".
     |      Keeping the latter for internal consistency in V1, however it should be
     |      corrected in V2.  See
     |      https://cloud.google.com/apis/design/standard_methods#update for details.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.PublisherClient()
     |          >>>
     |          >>> topic = {}
     |          >>> update_mask = {}
     |          >>>
     |          >>> response = client.update_topic(topic, update_mask)
     |      
     |      Args:
     |          topic (Union[dict, ~google.cloud.pubsub_v1.types.Topic]): The topic to update.
     |              If a dict is provided, it must be of the same form as the protobuf
     |              message :class:`~google.cloud.pubsub_v1.types.Topic`
     |          update_mask (Union[dict, ~google.cloud.pubsub_v1.types.FieldMask]): Indicates which fields in the provided topic to update.
     |              Must be specified and non-empty.
     |              If a dict is provided, it must be of the same form as the protobuf
     |              message :class:`~google.cloud.pubsub_v1.types.FieldMask`
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.cloud.pubsub_v1.types.Topic` instance.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from google.cloud.pubsub_v1.publisher.client.Client:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  target
     |      Return the target (where the API is).
     |      
     |      Returns:
     |          str: The location of the API.
    
    class SubscriberClient(google.cloud.pubsub_v1.subscriber.client.Client)
     |  A subscriber client for Google Cloud Pub/Sub.
     |  
     |  This creates an object that is capable of subscribing to messages.
     |  Generally, you can instantiate this client with no arguments, and you
     |  get sensible defaults.
     |  
     |  Args:
     |      policy_class (class): A class that describes how to handle
     |          subscriptions. You may subclass the
     |          :class:`.pubsub_v1.subscriber.policy.base.BasePolicy`
     |          class in order to define your own consumer. This is primarily
     |          provided to allow use of different concurrency models; the default
     |          is based on :class:`threading.Thread`.
     |      kwargs (dict): Any additional arguments provided are sent as keyword
     |          keyword arguments to the underlying
     |          :class:`~.gapic.pubsub.v1.subscriber_client.SubscriberClient`.
     |          Generally, you should not need to set additional keyword
     |          arguments.
     |  
     |  Method resolution order:
     |      SubscriberClient
     |      google.cloud.pubsub_v1.subscriber.client.Client
     |      builtins.object
     |  
     |  Methods inherited from google.cloud.pubsub_v1.subscriber.client.Client:
     |  
     |  __init__(self, policy_class=<class 'google.cloud.pubsub_v1.subscriber.policy.thread.Policy'>, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  acknowledge(self, subscription, ack_ids, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Acknowledges the messages associated with the ``ack_ids`` in the
     |      ``AcknowledgeRequest``. The Pub/Sub system can remove the relevant messages
     |      from the subscription.
     |      
     |      Acknowledging a message whose ack deadline has expired may succeed,
     |      but such a message may be redelivered later. Acknowledging a message more
     |      than once will not result in an error.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.SubscriberClient()
     |          >>>
     |          >>> subscription = client.subscription_path('[PROJECT]', '[SUBSCRIPTION]')
     |          >>> ack_ids = []
     |          >>>
     |          >>> client.acknowledge(subscription, ack_ids)
     |      
     |      Args:
     |          subscription (str): The subscription whose message is being acknowledged.
     |              Format is ``projects/{project}/subscriptions/{sub}``.
     |          ack_ids (list[str]): The acknowledgment ID for the messages being acknowledged that was returned
     |              by the Pub/Sub system in the ``Pull`` response. Must not be empty.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  create_snapshot(self, name, subscription, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Creates a snapshot from the requested subscription.
     |      If the snapshot already exists, returns ``ALREADY_EXISTS``.
     |      If the requested subscription doesn't exist, returns ``NOT_FOUND``.
     |      
     |      If the name is not provided in the request, the server will assign a random
     |      name for this snapshot on the same project as the subscription, conforming
     |      to the
     |      `resource name format <https://cloud.google.com/pubsub/docs/overview#names>`_.
     |      The generated name is populated in the returned Snapshot object.
     |      Note that for REST API requests, you must specify a name in the request.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.SubscriberClient()
     |          >>>
     |          >>> name = client.snapshot_path('[PROJECT]', '[SNAPSHOT]')
     |          >>> subscription = client.subscription_path('[PROJECT]', '[SUBSCRIPTION]')
     |          >>>
     |          >>> response = client.create_snapshot(name, subscription)
     |      
     |      Args:
     |          name (str): Optional user-provided name for this snapshot.
     |              If the name is not provided in the request, the server will assign a random
     |              name for this snapshot on the same project as the subscription.
     |              Note that for REST API requests, you must specify a name.
     |              Format is ``projects/{project}/snapshots/{snap}``.
     |          subscription (str): The subscription whose backlog the snapshot retains.
     |              Specifically, the created snapshot is guaranteed to retain:
     |      
     |              * The existing backlog on the subscription. More precisely, this is
     |                defined as the messages in the subscription's backlog that are
     |                unacknowledged upon the successful completion of the
     |                `CreateSnapshot` request; as well as:
     |              * Any messages published to the subscription's topic following the
     |                successful completion of the CreateSnapshot request.
     |      
     |              Format is ``projects/{project}/subscriptions/{sub}``.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.cloud.pubsub_v1.types.Snapshot` instance.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  create_subscription(self, name, topic, push_config=None, ack_deadline_seconds=None, retain_acked_messages=None, message_retention_duration=None, labels=None, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Creates a subscription to a given topic.
     |      If the subscription already exists, returns ``ALREADY_EXISTS``.
     |      If the corresponding topic doesn't exist, returns ``NOT_FOUND``.
     |      
     |      If the name is not provided in the request, the server will assign a random
     |      name for this subscription on the same project as the topic, conforming
     |      to the
     |      `resource name format <https://cloud.google.com/pubsub/docs/overview#names>`_.
     |      The generated name is populated in the returned Subscription object.
     |      Note that for REST API requests, you must specify a name in the request.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.SubscriberClient()
     |          >>>
     |          >>> name = client.subscription_path('[PROJECT]', '[SUBSCRIPTION]')
     |          >>> topic = client.topic_path('[PROJECT]', '[TOPIC]')
     |          >>>
     |          >>> response = client.create_subscription(name, topic)
     |      
     |      Args:
     |          name (str): The name of the subscription. It must have the format
     |              ``"projects/{project}/subscriptions/{subscription}"``. ``{subscription}`` must
     |              start with a letter, and contain only letters (``[A-Za-z]``), numbers
     |              (``[0-9]``), dashes (``-``), underscores (``_``), periods (``.``), tildes (``~``),
     |              plus (``+``) or percent signs (``%``). It must be between 3 and 255 characters
     |              in length, and it must not start with ``"goog"``.
     |          topic (str): The name of the topic from which this subscription is receiving messages.
     |              Format is ``projects/{project}/topics/{topic}``.
     |              The value of this field will be ``_deleted-topic_`` if the topic has been
     |              deleted.
     |          push_config (Union[dict, ~google.cloud.pubsub_v1.types.PushConfig]): If push delivery is used with this subscription, this field is
     |              used to configure it. An empty ``pushConfig`` signifies that the subscriber
     |              will pull and ack messages using API methods.
     |              If a dict is provided, it must be of the same form as the protobuf
     |              message :class:`~google.cloud.pubsub_v1.types.PushConfig`
     |          ack_deadline_seconds (int): This value is the maximum time after a subscriber receives a message
     |              before the subscriber should acknowledge the message. After message
     |              delivery but before the ack deadline expires and before the message is
     |              acknowledged, it is an outstanding message and will not be delivered
     |              again during that time (on a best-effort basis).
     |      
     |              For pull subscriptions, this value is used as the initial value for the ack
     |              deadline. To override this value for a given message, call
     |              ``ModifyAckDeadline`` with the corresponding ``ack_id`` if using
     |              pull.
     |              The minimum custom deadline you can specify is 10 seconds.
     |              The maximum custom deadline you can specify is 600 seconds (10 minutes).
     |              If this parameter is 0, a default value of 10 seconds is used.
     |      
     |              For push delivery, this value is also used to set the request timeout for
     |              the call to the push endpoint.
     |      
     |              If the subscriber never acknowledges the message, the Pub/Sub
     |              system will eventually redeliver the message.
     |          retain_acked_messages (bool): Indicates whether to retain acknowledged messages. If true, then
     |              messages are not expunged from the subscription's backlog, even if they are
     |              acknowledged, until they fall out of the ``message_retention_duration``
     |              window.
     |          message_retention_duration (Union[dict, ~google.cloud.pubsub_v1.types.Duration]): How long to retain unacknowledged messages in the subscription's backlog,
     |              from the moment a message is published.
     |              If ``retain_acked_messages`` is true, then this also configures the retention
     |              of acknowledged messages, and thus configures how far back in time a ``Seek``
     |              can be done. Defaults to 7 days. Cannot be more than 7 days or less than 10
     |              minutes.
     |              If a dict is provided, it must be of the same form as the protobuf
     |              message :class:`~google.cloud.pubsub_v1.types.Duration`
     |          labels (dict[str -> str]): User labels.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.cloud.pubsub_v1.types.Subscription` instance.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  delete_snapshot(self, snapshot, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Removes an existing snapshot. All messages retained in the snapshot
     |      are immediately dropped. After a snapshot is deleted, a new one may be
     |      created with the same name, but the new one has no association with the old
     |      snapshot or its subscription, unless the same subscription is specified.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.SubscriberClient()
     |          >>>
     |          >>> snapshot = client.snapshot_path('[PROJECT]', '[SNAPSHOT]')
     |          >>>
     |          >>> client.delete_snapshot(snapshot)
     |      
     |      Args:
     |          snapshot (str): The name of the snapshot to delete.
     |              Format is ``projects/{project}/snapshots/{snap}``.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  delete_subscription(self, subscription, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Deletes an existing subscription. All messages retained in the subscription
     |      are immediately dropped. Calls to ``Pull`` after deletion will return
     |      ``NOT_FOUND``. After a subscription is deleted, a new one may be created with
     |      the same name, but the new one has no association with the old
     |      subscription or its topic unless the same topic is specified.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.SubscriberClient()
     |          >>>
     |          >>> subscription = client.subscription_path('[PROJECT]', '[SUBSCRIPTION]')
     |          >>>
     |          >>> client.delete_subscription(subscription)
     |      
     |      Args:
     |          subscription (str): The subscription to delete.
     |              Format is ``projects/{project}/subscriptions/{sub}``.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  get_iam_policy(self, resource, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Gets the access control policy for a resource.
     |      Returns an empty policy if the resource exists and does not have a policy
     |      set.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.SubscriberClient()
     |          >>>
     |          >>> resource = client.subscription_path('[PROJECT]', '[SUBSCRIPTION]')
     |          >>>
     |          >>> response = client.get_iam_policy(resource)
     |      
     |      Args:
     |          resource (str): REQUIRED: The resource for which the policy is being requested.
     |              ``resource`` is usually specified as a path. For example, a Project
     |              resource is specified as ``projects/{project}``.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.cloud.pubsub_v1.types.Policy` instance.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  get_subscription(self, subscription, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Gets the configuration details of a subscription.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.SubscriberClient()
     |          >>>
     |          >>> subscription = client.subscription_path('[PROJECT]', '[SUBSCRIPTION]')
     |          >>>
     |          >>> response = client.get_subscription(subscription)
     |      
     |      Args:
     |          subscription (str): The name of the subscription to get.
     |              Format is ``projects/{project}/subscriptions/{sub}``.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.cloud.pubsub_v1.types.Subscription` instance.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  list_snapshots(self, project, page_size=None, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Lists the existing snapshots.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.SubscriberClient()
     |          >>>
     |          >>> project = client.project_path('[PROJECT]')
     |          >>>
     |          >>>
     |          >>> # Iterate over all results
     |          >>> for element in client.list_snapshots(project):
     |          ...     # process element
     |          ...     pass
     |          >>>
     |          >>> # Or iterate over results one page at a time
     |          >>> for page in client.list_snapshots(project, options=CallOptions(page_token=INITIAL_PAGE)):
     |          ...     for element in page:
     |          ...         # process element
     |          ...         pass
     |      
     |      Args:
     |          project (str): The name of the cloud project that snapshots belong to.
     |              Format is ``projects/{project}``.
     |          page_size (int): The maximum number of resources contained in the
     |              underlying API response. If page streaming is performed per-
     |              resource, this parameter does not affect the return value. If page
     |              streaming is performed per-page, this determines the maximum number
     |              of resources in a page.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.gax.PageIterator` instance. By default, this
     |          is an iterable of :class:`~google.cloud.pubsub_v1.types.Snapshot` instances.
     |          This object can also be configured to iterate over the pages
     |          of the response through the `options` parameter.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  list_subscriptions(self, project, page_size=None, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Lists matching subscriptions.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.SubscriberClient()
     |          >>>
     |          >>> project = client.project_path('[PROJECT]')
     |          >>>
     |          >>>
     |          >>> # Iterate over all results
     |          >>> for element in client.list_subscriptions(project):
     |          ...     # process element
     |          ...     pass
     |          >>>
     |          >>> # Or iterate over results one page at a time
     |          >>> for page in client.list_subscriptions(project, options=CallOptions(page_token=INITIAL_PAGE)):
     |          ...     for element in page:
     |          ...         # process element
     |          ...         pass
     |      
     |      Args:
     |          project (str): The name of the cloud project that subscriptions belong to.
     |              Format is ``projects/{project}``.
     |          page_size (int): The maximum number of resources contained in the
     |              underlying API response. If page streaming is performed per-
     |              resource, this parameter does not affect the return value. If page
     |              streaming is performed per-page, this determines the maximum number
     |              of resources in a page.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.gax.PageIterator` instance. By default, this
     |          is an iterable of :class:`~google.cloud.pubsub_v1.types.Subscription` instances.
     |          This object can also be configured to iterate over the pages
     |          of the response through the `options` parameter.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  modify_ack_deadline(self, subscription, ack_ids, ack_deadline_seconds, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Modifies the ack deadline for a specific message. This method is useful
     |      to indicate that more time is needed to process a message by the
     |      subscriber, or to make the message available for redelivery if the
     |      processing was interrupted. Note that this does not modify the
     |      subscription-level ``ackDeadlineSeconds`` used for subsequent messages.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.SubscriberClient()
     |          >>>
     |          >>> subscription = client.subscription_path('[PROJECT]', '[SUBSCRIPTION]')
     |          >>> ack_ids = []
     |          >>> ack_deadline_seconds = 0
     |          >>>
     |          >>> client.modify_ack_deadline(subscription, ack_ids, ack_deadline_seconds)
     |      
     |      Args:
     |          subscription (str): The name of the subscription.
     |              Format is ``projects/{project}/subscriptions/{sub}``.
     |          ack_ids (list[str]): List of acknowledgment IDs.
     |          ack_deadline_seconds (int): The new ack deadline with respect to the time this request was sent to
     |              the Pub/Sub system. For example, if the value is 10, the new
     |              ack deadline will expire 10 seconds after the ``ModifyAckDeadline`` call
     |              was made. Specifying zero may immediately make the message available for
     |              another pull request.
     |              The minimum deadline you can specify is 0 seconds.
     |              The maximum deadline you can specify is 600 seconds (10 minutes).
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  modify_push_config(self, subscription, push_config, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Modifies the ``PushConfig`` for a specified subscription.
     |      
     |      This may be used to change a push subscription to a pull one (signified by
     |      an empty ``PushConfig``) or vice versa, or change the endpoint URL and other
     |      attributes of a push subscription. Messages will accumulate for delivery
     |      continuously through the call regardless of changes to the ``PushConfig``.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.SubscriberClient()
     |          >>>
     |          >>> subscription = client.subscription_path('[PROJECT]', '[SUBSCRIPTION]')
     |          >>> push_config = {}
     |          >>>
     |          >>> client.modify_push_config(subscription, push_config)
     |      
     |      Args:
     |          subscription (str): The name of the subscription.
     |              Format is ``projects/{project}/subscriptions/{sub}``.
     |          push_config (Union[dict, ~google.cloud.pubsub_v1.types.PushConfig]): The push configuration for future deliveries.
     |      
     |              An empty ``pushConfig`` indicates that the Pub/Sub system should
     |              stop pushing messages from the given subscription and allow
     |              messages to be pulled and acknowledged - effectively pausing
     |              the subscription if ``Pull`` is not called.
     |              If a dict is provided, it must be of the same form as the protobuf
     |              message :class:`~google.cloud.pubsub_v1.types.PushConfig`
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  project_path(project)
     |      Returns a fully-qualified project resource name string.
     |  
     |  seek(self, subscription, time=None, snapshot=None, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Seeks an existing subscription to a point in time or to a given snapshot,
     |      whichever is provided in the request.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.SubscriberClient()
     |          >>>
     |          >>> subscription = client.subscription_path('[PROJECT]', '[SUBSCRIPTION]')
     |          >>>
     |          >>> response = client.seek(subscription)
     |      
     |      Args:
     |          subscription (str): The subscription to affect.
     |          time (Union[dict, ~google.cloud.pubsub_v1.types.Timestamp]): The time to seek to.
     |              Messages retained in the subscription that were published before this
     |              time are marked as acknowledged, and messages retained in the
     |              subscription that were published after this time are marked as
     |              unacknowledged. Note that this operation affects only those messages
     |              retained in the subscription (configured by the combination of
     |              ``message_retention_duration`` and ``retain_acked_messages``). For example,
     |              if ``time`` corresponds to a point before the message retention
     |              window (or to a point before the system's notion of the subscription
     |              creation time), only retained messages will be marked as unacknowledged,
     |              and already-expunged messages will not be restored.
     |              If a dict is provided, it must be of the same form as the protobuf
     |              message :class:`~google.cloud.pubsub_v1.types.Timestamp`
     |          snapshot (str): The snapshot to seek to. The snapshot's topic must be the same as that of
     |              the provided subscription.
     |              Format is ``projects/{project}/snapshots/{snap}``.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.cloud.pubsub_v1.types.SeekResponse` instance.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  set_iam_policy(self, resource, policy, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Sets the access control policy on the specified resource. Replaces any
     |      existing policy.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.SubscriberClient()
     |          >>>
     |          >>> resource = client.subscription_path('[PROJECT]', '[SUBSCRIPTION]')
     |          >>> policy = {}
     |          >>>
     |          >>> response = client.set_iam_policy(resource, policy)
     |      
     |      Args:
     |          resource (str): REQUIRED: The resource for which the policy is being specified.
     |              ``resource`` is usually specified as a path. For example, a Project
     |              resource is specified as ``projects/{project}``.
     |          policy (Union[dict, ~google.cloud.pubsub_v1.types.Policy]): REQUIRED: The complete policy to be applied to the ``resource``. The size of
     |              the policy is limited to a few 10s of KB. An empty policy is a
     |              valid policy but certain Cloud Platform services (such as Projects)
     |              might reject them.
     |              If a dict is provided, it must be of the same form as the protobuf
     |              message :class:`~google.cloud.pubsub_v1.types.Policy`
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.cloud.pubsub_v1.types.Policy` instance.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  snapshot_path(project, snapshot)
     |      Returns a fully-qualified snapshot resource name string.
     |  
     |  subscribe(self, subscription, callback=None, flow_control=())
     |      Return a representation of an individual subscription.
     |      
     |      This method creates and returns a ``Consumer`` object (that is, a
     |      :class:`~.pubsub_v1.subscriber._consumer.Consumer`)
     |      subclass) bound to the topic. It does `not` create the subcription
     |      on the backend (or do any API call at all); it simply returns an
     |      object capable of doing these things.
     |      
     |      If the ``callback`` argument is provided, then the :meth:`open` method
     |      is automatically called on the returned object. If ``callback`` is
     |      not provided, the subscription is returned unopened.
     |      
     |      .. note::
     |          It only makes sense to provide ``callback`` here if you have
     |          already created the subscription manually in the API.
     |      
     |      Args:
     |          subscription (str): The name of the subscription. The
     |              subscription should have already been created (for example,
     |              by using :meth:`create_subscription`).
     |          callback (function): The callback function. This function receives
     |              the :class:`~.pubsub_v1.types.PubsubMessage` as its only
     |              argument.
     |          flow_control (~.pubsub_v1.types.FlowControl): The flow control
     |              settings. Use this to prevent situations where you are
     |              inundated with too many messages at once.
     |      
     |      Returns:
     |          ~.pubsub_v1.subscriber._consumer.Consumer: An instance
     |              of the defined ``consumer_class`` on the client.
     |      
     |      Raises:
     |          TypeError: If ``callback`` is not callable.
     |  
     |  subscription_path(project, subscription)
     |      Returns a fully-qualified subscription resource name string.
     |  
     |  test_iam_permissions(self, resource, permissions, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Returns permissions that a caller has on the specified resource.
     |      If the resource does not exist, this will return an empty set of
     |      permissions, not a NOT_FOUND error.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.SubscriberClient()
     |          >>>
     |          >>> resource = client.subscription_path('[PROJECT]', '[SUBSCRIPTION]')
     |          >>> permissions = []
     |          >>>
     |          >>> response = client.test_iam_permissions(resource, permissions)
     |      
     |      Args:
     |          resource (str): REQUIRED: The resource for which the policy detail is being requested.
     |              ``resource`` is usually specified as a path. For example, a Project
     |              resource is specified as ``projects/{project}``.
     |          permissions (list[str]): The set of permissions to check for the ``resource``. Permissions with
     |              wildcards (such as '*' or 'storage.*') are not allowed. For more
     |              information see
     |              `IAM Overview <https://cloud.google.com/iam/docs/overview#permissions>`_.
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.cloud.pubsub_v1.types.TestIamPermissionsResponse` instance.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  topic_path(project, topic)
     |      Returns a fully-qualified topic resource name string.
     |  
     |  update_snapshot(self, snapshot, update_mask, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Updates an existing snapshot. Note that certain properties of a snapshot
     |      are not modifiable.
     |      NOTE:  The style guide requires body: "snapshot" instead of body: "*".
     |      Keeping the latter for internal consistency in V1, however it should be
     |      corrected in V2.  See
     |      https://cloud.google.com/apis/design/standard_methods#update for details.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.SubscriberClient()
     |          >>>
     |          >>> snapshot = {}
     |          >>> update_mask = {}
     |          >>>
     |          >>> response = client.update_snapshot(snapshot, update_mask)
     |      
     |      Args:
     |          snapshot (Union[dict, ~google.cloud.pubsub_v1.types.Snapshot]): The updated snpashot object.
     |              If a dict is provided, it must be of the same form as the protobuf
     |              message :class:`~google.cloud.pubsub_v1.types.Snapshot`
     |          update_mask (Union[dict, ~google.cloud.pubsub_v1.types.FieldMask]): Indicates which fields in the provided snapshot to update.
     |              Must be specified and non-empty.
     |              If a dict is provided, it must be of the same form as the protobuf
     |              message :class:`~google.cloud.pubsub_v1.types.FieldMask`
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.cloud.pubsub_v1.types.Snapshot` instance.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  update_subscription(self, subscription, update_mask, retry=<object object at 0x10f90c8b0>, timeout=<object object at 0x10f90c8b0>)
     |      Updates an existing subscription. Note that certain properties of a
     |      subscription, such as its topic, are not modifiable.
     |      NOTE:  The style guide requires body: "subscription" instead of body: "*".
     |      Keeping the latter for internal consistency in V1, however it should be
     |      corrected in V2.  See
     |      https://cloud.google.com/apis/design/standard_methods#update for details.
     |      
     |      Example:
     |          >>> from google.cloud import pubsub_v1
     |          >>>
     |          >>> client = pubsub_v1.SubscriberClient()
     |          >>>
     |          >>> subscription = {}
     |          >>> update_mask = {}
     |          >>>
     |          >>> response = client.update_subscription(subscription, update_mask)
     |      
     |      Args:
     |          subscription (Union[dict, ~google.cloud.pubsub_v1.types.Subscription]): The updated subscription object.
     |              If a dict is provided, it must be of the same form as the protobuf
     |              message :class:`~google.cloud.pubsub_v1.types.Subscription`
     |          update_mask (Union[dict, ~google.cloud.pubsub_v1.types.FieldMask]): Indicates which fields in the provided subscription to update.
     |              Must be specified and non-empty.
     |              If a dict is provided, it must be of the same form as the protobuf
     |              message :class:`~google.cloud.pubsub_v1.types.FieldMask`
     |          retry (Optional[google.api_core.retry.Retry]):  A retry object used
     |              to retry requests. If ``None`` is specified, requests will not
     |              be retried.
     |          timeout (Optional[float]): The amount of time, in seconds, to wait
     |              for the request to complete. Note that if ``retry`` is
     |              specified, the timeout applies to each individual attempt.
     |      
     |      Returns:
     |          A :class:`~google.cloud.pubsub_v1.types.Subscription` instance.
     |      
     |      Raises:
     |          google.api_core.exceptions.GoogleAPICallError: If the request
     |                  failed for any reason.
     |          google.api_core.exceptions.RetryError: If the request failed due
     |                  to a retryable error and retry attempts failed.
     |          ValueError: If the parameters are invalid.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from google.cloud.pubsub_v1.subscriber.client.Client:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  target
     |      Return the target (where the API is).
     |      
     |      Returns:
     |          str: The location of the API.

DATA
    __all__ = ('types', 'PublisherClient', 'SubscriberClient')

FILE
    /Users/rob/openag-cloud-v1/client/pubsub_env/lib/python3.6/site-packages/google/cloud/pubsub.py


